{"version":3,"sources":["Componenets/ContactList/ContactListStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItemStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItem.jsx","services/Api.js","services/toastify.js","redux/contacts/contacts-actions.js","helpers/function.js","redux/selector.js","Componenets/ContactList/ContactList.jsx","redux/contacts/contacts-operation.js","Componenets/Filter/FilterStyled.jsx","Componenets/Filter/FIlter.jsx","Componenets/Form/FormStyled.jsx","Componenets/Form/Form.jsx","Componenets/Section/SectionStyled.jsx","Componenets/Section/Section.jsx","style/GlobalStyle.jsx","App.js","redux/contacts/contacts-reducer.js","redux/contacts/filter-reducer.js","redux/contacts/contacts-errors.js","redux/store.js","index.js"],"names":["ContactWrapper","styled","ul","ContactItem","li","ContactListItem","id","name","number","onDeleteContact","className","onClick","axios","defaults","baseURL","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notifySuccess","success","toast","changeFilter","createAction","addAsyncContactRequests","addAsyncContactSuccess","addAsyncContactError","deleteAsyncContactRequests","deleteAsyncContactSuccess","deleteAsyncContactError","getAsyncContactsRequests","getAsyncContactsSuccess","getAsyncContactsError","visibleContacts","item","filter","info","normalizedFilter","toLowerCase","contacts","contact","includes","length","getContactsList","state","getContactsFilter","getVisibleContacts","createSelector","items","ContactList","dispatch","useDispatch","useSelector","contactId","a","idName","delete","then","data","catch","err","useEffect","get","map","FilterWrapper","label","FIlter","type","value","onChange","event","target","FormWrapper","form","Form","useState","setName","setNumber","handleChangeInput","currentTarget","alert","onSubmit","error","contactData","preventDefault","some","dataContact","post","pattern","title","required","SectionContainer","section","Section","children","createGlobalStyle","App","GlobalStyle","createReducer","_","payload","setError","message","resetError","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","thunk","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c67de36.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactWrapper = styled.ul`\r\n    \r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 4;\r\n     \r\n`;","import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactItem = styled.li`\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n\r\n    .buttonDelete{\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 20px;\r\n        line-height: 16px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-size: 10px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonDelete:hover {\r\n        background: #e53a2e;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n        \r\n`;","import { ContactItem } from \"./ContactListItemStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <ContactItem>\r\n            <p>{name}: {number}</p>\r\n            <button className=\"buttonDelete\" onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </ContactItem>\r\n    );\r\n}\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n}","import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:7070/\";\r\n\r\nconst getAllContactsApi = () => {\r\n  return axios\r\n    .get(\"contacts\")\r\n    .then(({ data }) => data)\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { getAllContactsApi };\r\n\r\nconst deleteContactApi = (idName) => {\r\n  return axios\r\n    .delete(`contacts/${idName}`)\r\n    .then(({ data }) => data)\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { deleteContactApi };\r\n\r\nconst addContactApi = (dataContact) => {\r\n  return axios\r\n    .post(`contacts`, dataContact)\r\n    .then(({ data }) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { addContactApi };\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst toastConfig = {\r\n  //   theme: \"dark\",\r\n  position: \"top-center\",\r\n  autoClose: 2000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n};\r\n\r\nexport const notifySuccess = (success) => toast.success(success, toastConfig);\r\nexport const notifyError = (error) => toast.error(error, toastConfig);\r\nexport const notifyInfo = (info) => toast.info(info, toastConfig);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport const addAsyncContactRequests = createAction(\r\n  \"contacts/addContactRequests\"\r\n);\r\nexport const addAsyncContactSuccess = createAction(\r\n  \"contacts/addContactSuccess\"\r\n);\r\nexport const addAsyncContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteAsyncContactRequests = createAction(\r\n  \"contacts/deleteContactRequests\"\r\n);\r\nexport const deleteAsyncContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteAsyncContactError = createAction(\r\n  \"contacts/deleteContactError\"\r\n);\r\n\r\nexport const getAsyncContactsRequests = createAction(\r\n  \"contacts/getContactsRequests\"\r\n);\r\nexport const getAsyncContactsSuccess = createAction(\r\n  \"contacts/getContactsSuccess\"\r\n);\r\nexport const getAsyncContactsError = createAction(\"contacts/getContactsError\");\r\n","import { notifyInfo } from \"../services/toastify\";\r\n\r\nexport const visibleContacts = (item, filter) => {\r\n  const normalizedFilter = filter?.toLowerCase();\r\n  const contacts = item?.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  filter && !contacts.length && notifyInfo(\"Noting found for your request\");\r\n  if (filter) {\r\n    return contacts;\r\n  } else {\r\n    return item;\r\n  }\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { visibleContacts } from \"../helpers/function\";\r\n\r\nexport const getContactsList = (state) => state.contacts.item;\r\nexport const getContactsFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContactsList, getContactsFilter],\r\n  (items, filter) => visibleContacts(items, filter)\r\n);\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactWrapper } from \"./ContactListStyled\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getContacts,\r\n  deleteContact,\r\n} from \"../../redux/contacts/contacts-operation\";\r\nimport { getVisibleContacts } from \"../../redux/selector\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ContactWrapper>\r\n      {contacts?.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ContactWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import {\r\n  addContactApi,\r\n  deleteContactApi,\r\n  getAllContactsApi,\r\n} from \"../../services/Api\";\r\nimport { notifySuccess } from \"../../services/toastify\";\r\nimport {\r\n  addAsyncContactError,\r\n  addAsyncContactRequests,\r\n  addAsyncContactSuccess,\r\n  deleteAsyncContactError,\r\n  deleteAsyncContactRequests,\r\n  deleteAsyncContactSuccess,\r\n  getAsyncContactsError,\r\n  getAsyncContactsRequests,\r\n  getAsyncContactsSuccess,\r\n} from \"./contacts-actions\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  dispatch(getAsyncContactsRequests());\r\n  try {\r\n    const contacts = await getAllContactsApi();\r\n    dispatch(getAsyncContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(getAsyncContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (contactData) => async (dispatch) => {\r\n  dispatch(addAsyncContactRequests());\r\n  try {\r\n    const contact = await addContactApi(contactData);\r\n    dispatch(addAsyncContactSuccess(contact));\r\n    notifySuccess(\"You have successfully added a new contact!\");\r\n  } catch (error) {\r\n    dispatch(addAsyncContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteAsyncContactRequests());\r\n  try {\r\n    await deleteContactApi(contactId);\r\n    dispatch(deleteAsyncContactSuccess(contactId));\r\n    notifySuccess(\"You have successfully deleted a contact!\");\r\n  } catch (error) {\r\n    dispatch(deleteAsyncContactError(error));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const FilterWrapper = styled.label`\r\n\r\n    padding: 15px;\r\n    display: flex;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    flex-grow: 1;\r\n    \r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { FilterWrapper } from \"./FilterStyled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport { getContactsFilter } from \"../../redux/selector\";\r\n\r\nconst FIlter = () => {\r\n  const filter = useSelector(getContactsFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      Find contact by name\r\n      <input className=\"input\" type=\"text\" value={filter} onChange={onChange} />\r\n    </FilterWrapper>\r\n  );\r\n};\r\nexport default FIlter;\r\n\r\nFIlter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const FormWrapper = styled.form`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n\r\n    label {\r\n        padding: 15px;\r\n        display: flex;\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n\r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n\r\n    .buttonSubmit {\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 175px;\r\n        height: 45px;\r\n        line-height: 45px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 11px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonSubmit:hover {\r\n        background: #2EE59D;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n`;","import { FormWrapper } from \"./FormStyled\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operation\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getContactsList } from \"../../redux/selector\";\r\nimport { notifyError } from \"../../services/toastify\";\r\n\r\nconst Form = function () {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContactsList);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeInput = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        alert(\"нет такой кнопки\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const isContact = contacts.some((item) => item.name === name);\r\n    if (!isContact) {\r\n      dispatch(addContact({ name, number }));\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      notifyError(`${name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className=\"input\"\r\n          onChange={handleChangeInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className=\"input\"\r\n          onChange={handleChangeInput}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"buttonSubmit\">\r\n        Add contact\r\n      </button>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const SectionContainer = styled.section`\r\n    padding: 20px;\r\n    background-color: #23e5ecf0;\r\n    width: 800px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    text-align: center;\r\n\r\n    .contactsWrapper {\r\n        display:flex;\r\n        align-content: stretch\r\n    }\r\n\r\n    .title {\r\n        text-align: center;\r\n        align-items: flex-start;\r\n    }\r\n`;","import { SectionContainer } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <SectionContainer>\r\n            <h1 className=\"title\">{title}</h1>\r\n            {children}\r\n        </SectionContainer>\r\n    );\r\n}\r\n\r\nexport default Section;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\nul,\r\nol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.list {\r\n  list-style: none;\r\n}\r\n\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;\r\n","import ContactList from \"./Componenets/ContactList/ContactList\";\r\nimport FIlter from \"./Componenets/Filter/FIlter\";\r\nimport Form from \"./Componenets/Form/Form\";\r\nimport Section from \"./Componenets/Section/Section\";\r\nimport GlobalStyles from \"../src/style/GlobalStyle\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Section title={\"Phonebook\"}>\r\n        <Form />\r\n      </Section>\r\n      <Section title={\"Contacts\"}>\r\n        <div className=\"contactsWrapper\">\r\n          <FIlter />\r\n          <ContactList />\r\n        </div>\r\n        <ToastContainer />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addAsyncContactSuccess,\r\n  getAsyncContactsSuccess,\r\n  deleteAsyncContactSuccess,\r\n} from \"./contacts-actions\";\r\n\r\nconst item = createReducer([], {\r\n  [getAsyncContactsSuccess]: (_, { payload }) => payload,\r\n  [addAsyncContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteAsyncContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport default item;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./contacts-actions\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filter;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addAsyncContactError,\r\n  addAsyncContactRequests,\r\n  deleteAsyncContactError,\r\n  deleteAsyncContactRequests,\r\n  getAsyncContactsError,\r\n  getAsyncContactsRequests,\r\n} from \"./contacts-actions\";\r\n\r\nconst setError = (_, { payload }) => payload.message;\r\nconst resetError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [getAsyncContactsRequests]: resetError,\r\n  [getAsyncContactsError]: setError,\r\n  [addAsyncContactRequests]: resetError,\r\n  [addAsyncContactError]: setError,\r\n  [deleteAsyncContactRequests]: resetError,\r\n  [deleteAsyncContactError]: setError,\r\n});\r\n\r\nexport default error;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport item from \"./contacts/contacts-reducer\";\r\nimport filter from \"./contacts/filter-reducer\";\r\nimport error from \"./contacts/contacts-errors\";\r\n\r\nconst contacts = combineReducers({\r\n  item,\r\n  filter,\r\n  error,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n  // getDefaultMiddleware().concat(logger, thunk),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}