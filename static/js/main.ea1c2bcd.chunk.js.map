{"version":3,"sources":["Componenets/ContactList/ContactListStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItemStyled.jsx","Componenets/ContactList/ContactListItem/ContactListItem.jsx","services/Api.js","redux/contacts/contacts-actions.js","redux/selector.js","helpers/function.js","Componenets/ContactList/ContactList.jsx","redux/contacts/contacts-operation.js","Componenets/Filter/FilterStyled.jsx","Componenets/Filter/FIlter.jsx","Componenets/Form/FormStyled.jsx","Componenets/Form/Form.jsx","Componenets/Section/SectionStyled.jsx","Componenets/Section/Section.jsx","style/GlobalStyle.jsx","App.js","redux/contacts/contacts-reducer.js","redux/contacts/filter-reducer.js","redux/contacts/contacts-errors.js","redux/store.js","index.js"],"names":["ContactWrapper","styled","ul","ContactItem","li","ContactListItem","id","name","number","onDeleteContact","className","onClick","axios","defaults","baseURL","changeFilter","createAction","addAsyncContactRequests","addAsyncContactSuccess","addAsyncContactError","deleteAsyncContactRequests","deleteAsyncContactSuccess","deleteAsyncContactError","getAsyncContactsRequests","getAsyncContactsSuccess","getAsyncContactsError","getContactsList","state","contacts","item","getContactsFilter","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","contact","includes","visibleContacts","ContactList","dispatch","useDispatch","useSelector","contactId","a","idName","delete","then","data","catch","err","useEffect","get","map","FilterWrapper","label","FIlter","type","value","onChange","event","target","FormWrapper","form","Form","useState","setName","setNumber","handleChangeInput","currentTarget","alert","onSubmit","contactData","preventDefault","some","dataContact","post","pattern","title","required","SectionContainer","section","Section","children","createGlobalStyle","App","GlobalStyle","createReducer","_","payload","setError","message","resetError","error","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","thunk","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea1c2bcd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactWrapper = styled.ul`\r\n    \r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 4;\r\n     \r\n`;","import styled from \"styled-components\";\r\n\r\n\r\nexport const ContactItem = styled.li`\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n\r\n    .buttonDelete{\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 20px;\r\n        line-height: 16px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-size: 10px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonDelete:hover {\r\n        background: #e53a2e;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n        \r\n`;","import { ContactItem } from \"./ContactListItemStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <ContactItem>\r\n            <p>{name}: {number}</p>\r\n            <button className=\"buttonDelete\" onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </ContactItem>\r\n    );\r\n}\r\n\r\nexport default ContactListItem;\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n}","import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:7070/\";\r\n\r\nconst getAllContactsApi = () => {\r\n  return axios\r\n    .get(\"contacts\")\r\n    .then(({ data }) => data)\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { getAllContactsApi };\r\n\r\nconst deleteContactApi = (idName) => {\r\n  return axios\r\n    .delete(`contacts/${idName}`)\r\n    .then(({ data }) => data)\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { deleteContactApi };\r\n\r\nconst addContactApi = (dataContact) => {\r\n  return axios\r\n    .post(`contacts`, dataContact)\r\n    .then(({ data }) => {\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport { addContactApi };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport const addAsyncContactRequests = createAction(\r\n  \"contacts/addContactRequests\"\r\n);\r\nexport const addAsyncContactSuccess = createAction(\r\n  \"contacts/addContactSuccess\"\r\n);\r\nexport const addAsyncContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteAsyncContactRequests = createAction(\r\n  \"contacts/deleteContactRequests\"\r\n);\r\nexport const deleteAsyncContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteAsyncContactError = createAction(\r\n  \"contacts/deleteContactError\"\r\n);\r\n\r\nexport const getAsyncContactsRequests = createAction(\r\n  \"contacts/getContactsRequests\"\r\n);\r\nexport const getAsyncContactsSuccess = createAction(\r\n  \"contacts/getContactsSuccess\"\r\n);\r\nexport const getAsyncContactsError = createAction(\"contacts/getContactsError\");\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { visibleContacts } from \"../helpers/function\";\r\n\r\nexport const getContactsList = (state) => state.contacts.item;\r\nexport const getContactsFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContactsList, getContactsFilter],\r\n  (items, filter) => visibleContacts(items, filter)\r\n);\r\n","export const visibleContacts = (item, filter) => {\r\n  const normalizedFilter = filter?.toLowerCase();\r\n  const contacts = item?.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n  if (filter) {\r\n    return contacts;\r\n  } else {\r\n    return item;\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactWrapper } from \"./ContactListStyled\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getContacts,\r\n  deleteContact,\r\n} from \"../../redux/contacts/contacts-operation\";\r\nimport { getVisibleContacts } from \"../../redux/selector\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ContactWrapper>\r\n      {contacts?.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ContactWrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import {\r\n  addContactApi,\r\n  deleteContactApi,\r\n  getAllContactsApi,\r\n} from \"../../services/Api\";\r\nimport {\r\n  addAsyncContactError,\r\n  addAsyncContactRequests,\r\n  addAsyncContactSuccess,\r\n  deleteAsyncContactError,\r\n  deleteAsyncContactRequests,\r\n  deleteAsyncContactSuccess,\r\n  getAsyncContactsError,\r\n  getAsyncContactsRequests,\r\n  getAsyncContactsSuccess,\r\n} from \"./contacts-actions\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  dispatch(getAsyncContactsRequests());\r\n  try {\r\n    const contacts = await getAllContactsApi();\r\n    dispatch(getAsyncContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(getAsyncContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (contactData) => async (dispatch) => {\r\n  dispatch(addAsyncContactRequests());\r\n  try {\r\n    const contact = await addContactApi(contactData);\r\n    dispatch(addAsyncContactSuccess(contact));\r\n  } catch (error) {\r\n    dispatch(addAsyncContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteAsyncContactRequests());\r\n  try {\r\n    await deleteContactApi(contactId);\r\n    dispatch(deleteAsyncContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteAsyncContactError(error));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const FilterWrapper = styled.label`\r\n\r\n    padding: 15px;\r\n    display: flex;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    flex-grow: 1;\r\n    \r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { FilterWrapper } from \"./FilterStyled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\r\nimport { getContactsFilter } from \"../../redux/selector\";\r\n\r\nconst FIlter = () => {\r\n  const filter = useSelector(getContactsFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      Find contact by name\r\n      <input className=\"input\" type=\"text\" value={filter} onChange={onChange} />\r\n    </FilterWrapper>\r\n  );\r\n};\r\nexport default FIlter;\r\n\r\nFIlter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const FormWrapper = styled.form`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n\r\n    label {\r\n        padding: 15px;\r\n        display: flex;\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n\r\n\r\n    .input {\r\n        display:block;\r\n        font-size: 20px;\r\n        width: 200px;\r\n        width:450;\r\n        margin:10px 0;\r\n        background-color: #fafafa;\r\n        border:0;\r\n        border-radius: 5px;\r\n        box-shadow:0 0 4px rgba(0,0,0,0.3);\r\n        transition: .3s box-shadow;\r\n    }\r\n\r\n    .input:hover {\r\n        box-shadow:0 0 4px rgba(0,0,0,0.5);\r\n    }\r\n\r\n    .buttonSubmit {\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        width: 175px;\r\n        height: 45px;\r\n        line-height: 45px;\r\n        border-radius: 45px;\r\n        margin: 10px 20px;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 11px;\r\n        text-transform: uppercase;\r\n        text-align: center;\r\n        letter-spacing: 3px;\r\n        font-weight: 600;\r\n        color: #524f4e;\r\n        background: white;\r\n        box-shadow: 0 8px 15px rgba(0, 0, 0, .1);\r\n        transition: .3s;\r\n    }\r\n    .buttonSubmit:hover {\r\n        background: #2EE59D;\r\n        box-shadow: 0 15px 20px rgba(46, 229, 157, .4);\r\n        color: white;\r\n        transform: translateY(-7px);\r\n    }\r\n`;","import { FormWrapper } from \"./FormStyled\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operation\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getContactsList } from \"../../redux/selector\";\r\n\r\nconst Form = function () {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContactsList);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeInput = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        alert(\"нет такой кнопки\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const isContact = contacts.some((item) => item.name === name);\r\n    if (!isContact) {\r\n      dispatch(addContact({ name, number }));\r\n      setName(\"\");\r\n      setNumber(\"\");\r\n    } else {\r\n      alert(`${name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className=\"input\"\r\n          onChange={handleChangeInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className=\"input\"\r\n          onChange={handleChangeInput}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"buttonSubmit\">\r\n        Add contact\r\n      </button>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const SectionContainer = styled.section`\r\n    padding: 20px;\r\n    background-color: #23e5ecf0;\r\n    width: 800px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    text-align: center;\r\n\r\n    .contactsWrapper {\r\n        display:flex;\r\n        align-content: stretch\r\n    }\r\n\r\n    .title {\r\n        text-align: center;\r\n        align-items: flex-start;\r\n    }\r\n`;","import { SectionContainer } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <SectionContainer>\r\n            <h1 className=\"title\">{title}</h1>\r\n            {children}\r\n        </SectionContainer>\r\n    );\r\n}\r\n\r\nexport default Section;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\nul,\r\nol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.list {\r\n  list-style: none;\r\n}\r\n\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`;\r\n","import ContactList from \"./Componenets/ContactList/ContactList\";\r\nimport FIlter from \"./Componenets/Filter/FIlter\";\r\nimport Form from \"./Componenets/Form/Form\";\r\nimport Section from \"./Componenets/Section/Section\";\r\nimport GlobalStyles from \"../src/style/GlobalStyle\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Section title={\"Phonebook\"}>\r\n        <Form />\r\n      </Section>\r\n      <Section title={\"Contacts\"}>\r\n        <div className=\"contactsWrapper\">\r\n          <FIlter />\r\n          <ContactList />\r\n        </div>\r\n        <ToastContainer />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addAsyncContactSuccess,\r\n  getAsyncContactsSuccess,\r\n  deleteAsyncContactSuccess,\r\n} from \"./contacts-actions\";\r\n\r\nconst item = createReducer([], {\r\n  [getAsyncContactsSuccess]: (_, { payload }) => payload,\r\n  [addAsyncContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteAsyncContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport default item;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./contacts-actions\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filter;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addAsyncContactError,\r\n  addAsyncContactRequests,\r\n  deleteAsyncContactError,\r\n  deleteAsyncContactRequests,\r\n  getAsyncContactsError,\r\n  getAsyncContactsRequests,\r\n} from \"./contacts-actions\";\r\n\r\nconst setError = (_, { payload }) => payload.message;\r\nconst resetError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [getAsyncContactsRequests]: resetError,\r\n  [getAsyncContactsError]: setError,\r\n  [addAsyncContactRequests]: resetError,\r\n  [addAsyncContactError]: setError,\r\n  [deleteAsyncContactRequests]: resetError,\r\n  [deleteAsyncContactError]: setError,\r\n});\r\n\r\nexport default error;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport item from \"./contacts/contacts-reducer\";\r\nimport filter from \"./contacts/filter-reducer\";\r\nimport error from \"./contacts/contacts-errors\";\r\n\r\nconst contacts = combineReducers({\r\n  item,\r\n  filter,\r\n  error,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(logger, thunk),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}